name: sbom-monitor

on: pull_request

jobs:
  sbom-monitor:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 11 for running tests
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.2
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install -g @cyclonedx/cdxgen@8.5.3

      - name: Produce SBOM for head commit in target branch
        run: |
          git checkout ${{ github.head_ref }} --
          mvn clean install -DskipTests # Install SNAPSHOT files locally
          cdxgen -t java -o bom.cdxgen.head.json
          echo "HEAD=$(realpath bom.cdxgen.head.json)" >> $GITHUB_ENV

      - name: Produce SBOM for head commit in base branch
        run: |
          git checkout ${{ github.event.pull_request.base.ref }} --
          mvn clean install -DskipTests # Install SNAPSHOT files locally
          cdxgen -t java -o bom.cdxgen.parent.json
          echo "BASE=$(realpath bom.cdxgen.parent.json)" >> $GITHUB_ENV

      - name: Compare SBOMs
        env:
          HEAD: ${{ env.HEAD }}
          BASE: ${{ env.BASE }}
        run: |
          git diff --no-index $BASE $HEAD > diff.txt || true
          echo "DIFF=$(realpath diff.txt)" >> $GITHUB_ENV

      - name: Post comment to PR
        env:
          URL: ${{ github.event.pull_request.comments_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DIFF: ${{ env.DIFF }}
        run: |
          CONTENT="{ \"body\": \"## SBOM diff\n
            \`\`\`diff\n
            $(cat $DIFF | sed 's/"/\\\"/g')\n
            \`\`\`\\n\"
          }"
          echo $CONTENT
          echo $URL
          curl \
            -v \
            --trace-ascii \
            -X POST \
            $URL \
            -H "Content-Type: application/json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            --data "$CONTENT"
